1. I think I would have to say my proudest professional achievment would be the time spent while I was working at Minerva Engineering on the MONGOSMASH project (see resume 10/2017 â€“ 03/2018). This time in particular stands out to me because of both the technical challenges and the environment in which they were presented. This project was done in the R&D sector of a DoD agency where rapid development and turnaround are seen as essential. When starting on this team, I had zero experience with much of their main tech stack: Docker, NodeJS, Express, Socket.IO, and Redis just to name a few. On my first day, a laptop was quite literally thrown at me and I was told to read up on Docker and I would be quizzed at the day's end. While I wouldn't call this environment the friendliest, I did infact spin up on Docker very quickly and was able to make meaningful contributions to our backend systems in just a week. This knack for adapting continued on to when I made a web application for the team which could show live streams of cell phones we were fuzzing. I had not used any of the web application tech listed before, but was able to spin up very quickly again and deliver a demoable product to our customers.

2. I recently found this article on HackerNews, a tech forum which I read daily: https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/ . Although the article itself was posted last year, I think it does an amazing job of covering the core basics needed for good API design. I would recommend this article to anyone new to API design, or even as a great refresher before starting to build out or improve an existing API. One of the things that stood out to me, due to personal experience, is the importance of allowing filtering. An API that I had worked on in the past had gotten quite out of hand because we did not think about how big the JSON elements we were returning could end up being. Something like this article beforehand would have been a great resource

3. In a broad sense, I would tell my grandmother that Availity is like the connecting tissue for the vast and often messy and unstructured world of healthcare between providers (doctors, specialists, etc.) and their payers. Providers can use Availity to get paid quicker and more efficiently so that they can continue to provide great service to their patients and keep the healthcare ball rolling.
